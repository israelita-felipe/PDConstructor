package br.edu.ufrpe.uag.projetao.model;
// Generated 26/04/2016 23:17:23 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import br.edu.ufrpe.uag.projetao.interfaces.InterfaceEntity;

/**
 * EscolhaClasseTexto generated by hbm2java
 */

@Entity
@Table(name = "escolha_classe_texto", schema = "public")
public class EscolhaClasseTexto implements InterfaceEntity {

    private int id;

    private AlocacaoTexto alocacaoTexto;
    private String descricao;
    private Set<ClassificacaoTexto> classificacaoTextos = new HashSet<>(0);

    public EscolhaClasseTexto() {
    }

    public EscolhaClasseTexto(int id, AlocacaoTexto alocacaoTexto, String descricao) {
	this.id = id;
	this.alocacaoTexto = alocacaoTexto;
	this.descricao = descricao;
    }

    public EscolhaClasseTexto(int id, AlocacaoTexto alocacaoTexto, String descricao,
	    Set<ClassificacaoTexto> classificacaoTextos) {
	this.id = id;
	this.alocacaoTexto = alocacaoTexto;
	this.descricao = descricao;
	this.classificacaoTextos = classificacaoTextos;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
	return this.id;
    }

    public void setId(int id) {
	this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "alocacao_texto", nullable = false)
    public AlocacaoTexto getAlocacaoTexto() {
	return this.alocacaoTexto;
    }

    public void setAlocacaoTexto(AlocacaoTexto alocacaoTexto) {
	this.alocacaoTexto = alocacaoTexto;
    }

    @Column(name = "descricao", nullable = false, length = 200)
    public String getDescricao() {
	return this.descricao;
    }

    public void setDescricao(String descricao) {
	this.descricao = descricao;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "escolhaClasseTexto")
    public Set<ClassificacaoTexto> getClassificacaoTextos() {
	return this.classificacaoTextos;
    }

    public void setClassificacaoTextos(Set<ClassificacaoTexto> classificacaoTextos) {
	this.classificacaoTextos = classificacaoTextos;
    }

    @Override
    public int hashCode() {
	int hash = 7;
	hash = 97 * hash + Objects.hashCode(this.alocacaoTexto);
	hash = 97 * hash + Objects.hashCode(this.descricao);
	return hash;
    }

    @Override
    public boolean equals(Object obj) {
	if (this == obj) {
	    return true;
	}
	if (obj == null) {
	    return false;
	}
	if (getClass() != obj.getClass()) {
	    return false;
	}
	final EscolhaClasseTexto other = (EscolhaClasseTexto) obj;
	if (!Objects.equals(this.descricao, other.descricao)) {
	    return false;
	}
	return Objects.equals(this.alocacaoTexto, other.alocacaoTexto);
    }

    @Override
    public String toString() {
	return descricao;
    }

}
