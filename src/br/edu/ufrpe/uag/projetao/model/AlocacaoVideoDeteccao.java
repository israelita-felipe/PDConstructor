package br.edu.ufrpe.uag.projetao.model;
// Generated 15/06/2016 11:29:14 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import br.edu.ufrpe.uag.projetao.interfaces.InterfaceEntity;

/**
 * AlocacaoVideoDeteccao generated by hbm2java
 */
@Entity
@Table(name = "alocacao_video_deteccao", schema = "public")
public class AlocacaoVideoDeteccao implements InterfaceEntity {

    private int id;
    private BaseVideoDeteccao baseVideoDeteccao;
    private Usuario usuario;
    private VideoDeteccao videoDeteccao;
    private Set<DeteccaoVideo> deteccaoVideos = new HashSet<DeteccaoVideo>(0);

    public AlocacaoVideoDeteccao() {
    }

    public AlocacaoVideoDeteccao(int id, BaseVideoDeteccao baseVideoDeteccao, Usuario usuario,
	    VideoDeteccao videoDeteccao) {
	this.id = id;
	this.baseVideoDeteccao = baseVideoDeteccao;
	this.usuario = usuario;
	this.videoDeteccao = videoDeteccao;
    }

    public AlocacaoVideoDeteccao(int id, BaseVideoDeteccao baseVideoDeteccao, Usuario usuario,
	    VideoDeteccao videoDeteccao, Set<DeteccaoVideo> deteccaoVideos) {
	this.id = id;
	this.baseVideoDeteccao = baseVideoDeteccao;
	this.usuario = usuario;
	this.videoDeteccao = videoDeteccao;
	this.deteccaoVideos = deteccaoVideos;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
	return this.id;
    }

    public void setId(int id) {
	this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "base_video_deteccao", nullable = false)
    public BaseVideoDeteccao getBaseVideoDeteccao() {
	return this.baseVideoDeteccao;
    }

    public void setBaseVideoDeteccao(BaseVideoDeteccao baseVideoDeteccao) {
	this.baseVideoDeteccao = baseVideoDeteccao;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "supervisor", nullable = false)
    public Usuario getUsuario() {
	return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
	this.usuario = usuario;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "video_deteccao", nullable = false)
    public VideoDeteccao getVideoDeteccao() {
	return this.videoDeteccao;
    }

    public void setVideoDeteccao(VideoDeteccao videoDeteccao) {
	this.videoDeteccao = videoDeteccao;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "alocacaoVideoDeteccao")
    public Set<DeteccaoVideo> getDeteccaoVideos() {
	return this.deteccaoVideos;
    }

    public void setDeteccaoVideos(Set<DeteccaoVideo> deteccaoVideos) {
	this.deteccaoVideos = deteccaoVideos;
    }

    /*
     * (non-Javadoc)
     * 
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
	final int prime = 31;
	int result = 1;
	result = prime * result + ((baseVideoDeteccao == null) ? 0 : baseVideoDeteccao.hashCode());
	result = prime * result + id;
	result = prime * result + ((usuario == null) ? 0 : usuario.hashCode());
	result = prime * result + ((videoDeteccao == null) ? 0 : videoDeteccao.hashCode());
	return result;
    }

    /*
     * (non-Javadoc)
     * 
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
	if (this == obj) {
	    return true;
	}
	if (obj == null) {
	    return false;
	}
	if (!(obj instanceof AlocacaoVideoDeteccao)) {
	    return false;
	}
	AlocacaoVideoDeteccao other = (AlocacaoVideoDeteccao) obj;
	if (baseVideoDeteccao == null) {
	    if (other.baseVideoDeteccao != null) {
		return false;
	    }
	} else if (!baseVideoDeteccao.equals(other.baseVideoDeteccao)) {
	    return false;
	}
	if (id != other.id) {
	    return false;
	}
	if (usuario == null) {
	    if (other.usuario != null) {
		return false;
	    }
	} else if (!usuario.equals(other.usuario)) {
	    return false;
	}
	if (videoDeteccao == null) {
	    if (other.videoDeteccao != null) {
		return false;
	    }
	} else if (!videoDeteccao.equals(other.videoDeteccao)) {
	    return false;
	}
	return true;
    }

    /*
     * (non-Javadoc)
     * 
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
	return "AlocacaoVideoDeteccao [id=" + id + ", baseVideoDeteccao=" + baseVideoDeteccao + ", usuario=" + usuario
		+ ", videoDeteccao=" + videoDeteccao + ", deteccaoVideos=" + deteccaoVideos + "]";
    }

}
