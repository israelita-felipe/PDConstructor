package br.edu.ufrpe.uag.projetao.model;
// Generated 26/04/2016 23:17:23 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import br.edu.ufrpe.uag.projetao.interfaces.InterfaceEntity;

/**
 * Usuario generated by hbm2java
 */

@Entity
@Table(name = "usuario", schema = "public")
public class Usuario implements InterfaceEntity {

    private int id;
    private Perfil perfil;
    private String nome;
    private String email;
    private String senha;
    private Set<DeteccaoImagem> deteccaoImagems = new HashSet<DeteccaoImagem>(0);
    private Set<LiberacaoBaseImagemClasse> liberacaoBaseImagemClassesForEscravo = new HashSet<LiberacaoBaseImagemClasse>(
	    0);
    private Set<LiberacaoBaseTexto> liberacaoBaseTextosForEscravo = new HashSet<LiberacaoBaseTexto>(0);
    private Set<BaseImagemDeteccao> baseImagemDeteccaos = new HashSet<BaseImagemDeteccao>(0);
    private Set<AlocacaoImagemClasse> alocacaoImagemClasses = new HashSet<AlocacaoImagemClasse>(0);
    private Set<AlocacaoTexto> alocacaoTextos = new HashSet<AlocacaoTexto>(0);
    private Set<BaseTexto> baseTextos = new HashSet<BaseTexto>(0);
    private Set<ClassificacaoTexto> classificacaoTextos = new HashSet<ClassificacaoTexto>(0);
    private Set<ClasssificacaoImagemClasse> classsificacaoImagemClasses = new HashSet<ClasssificacaoImagemClasse>(0);
    private Set<AlocacaoImagemDeteccao> alocacaoImagemDeteccaos = new HashSet<AlocacaoImagemDeteccao>(0);
    private Set<LiberacaoBaseImagemDeteccao> liberacaoBaseImagemDeteccaosForSupervisor = new HashSet<LiberacaoBaseImagemDeteccao>(
	    0);
    private Set<ImagemClasse> imagemClasses = new HashSet<ImagemClasse>(0);
    private Set<LiberacaoBaseImagemDeteccao> liberacaoBaseImagemDeteccaosForEscravo = new HashSet<LiberacaoBaseImagemDeteccao>(
	    0);
    private Set<ImagemDeteccao> imagemDeteccaos = new HashSet<ImagemDeteccao>(0);
    private Set<LiberacaoBaseImagemClasse> liberacaoBaseImagemClassesForSupervisor = new HashSet<LiberacaoBaseImagemClasse>(
	    0);
    private Set<LiberacaoBaseTexto> liberacaoBaseTextosForSupervisor = new HashSet<LiberacaoBaseTexto>(0);
    private Set<BaseImagemClasse> baseImagemClasses = new HashSet<BaseImagemClasse>(0);
    private Set<AlocacaoVideoDeteccao> alocacaoVideoDeteccaos = new HashSet<AlocacaoVideoDeteccao>(0);
    private Set<DeteccaoVideo> deteccaoVideos = new HashSet<DeteccaoVideo>(0);
    private Set<LiberacaoBaseVideoDeteccao> liberacaoBaseVideoDeteccaosForSupervisor = new HashSet<LiberacaoBaseVideoDeteccao>(
	    0);
    private Set<VideoDeteccao> videoDeteccaos = new HashSet<VideoDeteccao>(0);
    private Set<BaseVideoDeteccao> baseVideoDeteccaos = new HashSet<BaseVideoDeteccao>(0);
    private Set<LiberacaoBaseVideoDeteccao> liberacaoBaseVideoDeteccaosForEscravo = new HashSet<LiberacaoBaseVideoDeteccao>(
	    0);

    public Usuario() {
    }

    public Usuario(int id, Perfil perfil, String email, String senha) {
	this.id = id;
	this.perfil = perfil;
	this.email = email;
	this.senha = senha;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
	return this.id;
    }

    public void setId(int id) {
	this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "perfil", nullable = false)
    public Perfil getPerfil() {
	return this.perfil;
    }

    public void setPerfil(Perfil perfil) {
	this.perfil = perfil;
    }

    @Column(name = "nome", length = 100)
    public String getNome() {
	return this.nome;
    }

    public void setNome(String nome) {
	this.nome = nome;
    }

    @Column(name = "email", nullable = false)
    public String getEmail() {
	return this.email;
    }

    public void setEmail(String email) {
	this.email = email;
    }

    @Column(name = "senha", nullable = false)
    public String getSenha() {
	return this.senha;
    }

    public void setSenha(String senha) {
	this.senha = senha;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<DeteccaoImagem> getDeteccaoImagems() {
	return this.deteccaoImagems;
    }

    public void setDeteccaoImagems(Set<DeteccaoImagem> deteccaoImagems) {
	this.deteccaoImagems = deteccaoImagems;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByEscravo")
    public Set<LiberacaoBaseImagemClasse> getLiberacaoBaseImagemClassesForEscravo() {
	return this.liberacaoBaseImagemClassesForEscravo;
    }

    public void setLiberacaoBaseImagemClassesForEscravo(
	    Set<LiberacaoBaseImagemClasse> liberacaoBaseImagemClassesForEscravo) {
	this.liberacaoBaseImagemClassesForEscravo = liberacaoBaseImagemClassesForEscravo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByEscravo")
    public Set<LiberacaoBaseTexto> getLiberacaoBaseTextosForEscravo() {
	return this.liberacaoBaseTextosForEscravo;
    }

    public void setLiberacaoBaseTextosForEscravo(Set<LiberacaoBaseTexto> liberacaoBaseTextosForEscravo) {
	this.liberacaoBaseTextosForEscravo = liberacaoBaseTextosForEscravo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<BaseImagemDeteccao> getBaseImagemDeteccaos() {
	return this.baseImagemDeteccaos;
    }

    public void setBaseImagemDeteccaos(Set<BaseImagemDeteccao> baseImagemDeteccaos) {
	this.baseImagemDeteccaos = baseImagemDeteccaos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<AlocacaoImagemClasse> getAlocacaoImagemClasses() {
	return this.alocacaoImagemClasses;
    }

    public void setAlocacaoImagemClasses(Set<AlocacaoImagemClasse> alocacaoImagemClasses) {
	this.alocacaoImagemClasses = alocacaoImagemClasses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<AlocacaoTexto> getAlocacaoTextos() {
	return this.alocacaoTextos;
    }

    public void setAlocacaoTextos(Set<AlocacaoTexto> alocacaoTextos) {
	this.alocacaoTextos = alocacaoTextos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<BaseTexto> getBaseTextos() {
	return this.baseTextos;
    }

    public void setBaseTextos(Set<BaseTexto> baseTextos) {
	this.baseTextos = baseTextos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<ClassificacaoTexto> getClassificacaoTextos() {
	return this.classificacaoTextos;
    }

    public void setClassificacaoTextos(Set<ClassificacaoTexto> classificacaoTextos) {
	this.classificacaoTextos = classificacaoTextos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<ClasssificacaoImagemClasse> getClasssificacaoImagemClasses() {
	return this.classsificacaoImagemClasses;
    }

    public void setClasssificacaoImagemClasses(Set<ClasssificacaoImagemClasse> classsificacaoImagemClasses) {
	this.classsificacaoImagemClasses = classsificacaoImagemClasses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<AlocacaoImagemDeteccao> getAlocacaoImagemDeteccaos() {
	return this.alocacaoImagemDeteccaos;
    }

    public void setAlocacaoImagemDeteccaos(Set<AlocacaoImagemDeteccao> alocacaoImagemDeteccaos) {
	this.alocacaoImagemDeteccaos = alocacaoImagemDeteccaos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioBySupervisor")
    public Set<LiberacaoBaseImagemDeteccao> getLiberacaoBaseImagemDeteccaosForSupervisor() {
	return this.liberacaoBaseImagemDeteccaosForSupervisor;
    }

    public void setLiberacaoBaseImagemDeteccaosForSupervisor(
	    Set<LiberacaoBaseImagemDeteccao> liberacaoBaseImagemDeteccaosForSupervisor) {
	this.liberacaoBaseImagemDeteccaosForSupervisor = liberacaoBaseImagemDeteccaosForSupervisor;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<ImagemClasse> getImagemClasses() {
	return this.imagemClasses;
    }

    public void setImagemClasses(Set<ImagemClasse> imagemClasses) {
	this.imagemClasses = imagemClasses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByEscravo")
    public Set<LiberacaoBaseImagemDeteccao> getLiberacaoBaseImagemDeteccaosForEscravo() {
	return this.liberacaoBaseImagemDeteccaosForEscravo;
    }

    public void setLiberacaoBaseImagemDeteccaosForEscravo(
	    Set<LiberacaoBaseImagemDeteccao> liberacaoBaseImagemDeteccaosForEscravo) {
	this.liberacaoBaseImagemDeteccaosForEscravo = liberacaoBaseImagemDeteccaosForEscravo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<ImagemDeteccao> getImagemDeteccaos() {
	return this.imagemDeteccaos;
    }

    public void setImagemDeteccaos(Set<ImagemDeteccao> imagemDeteccaos) {
	this.imagemDeteccaos = imagemDeteccaos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioBySupervisor")
    public Set<LiberacaoBaseImagemClasse> getLiberacaoBaseImagemClassesForSupervisor() {
	return this.liberacaoBaseImagemClassesForSupervisor;
    }

    public void setLiberacaoBaseImagemClassesForSupervisor(
	    Set<LiberacaoBaseImagemClasse> liberacaoBaseImagemClassesForSupervisor) {
	this.liberacaoBaseImagemClassesForSupervisor = liberacaoBaseImagemClassesForSupervisor;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioBySupervisor")
    public Set<LiberacaoBaseTexto> getLiberacaoBaseTextosForSupervisor() {
	return this.liberacaoBaseTextosForSupervisor;
    }

    public void setLiberacaoBaseTextosForSupervisor(Set<LiberacaoBaseTexto> liberacaoBaseTextosForSupervisor) {
	this.liberacaoBaseTextosForSupervisor = liberacaoBaseTextosForSupervisor;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<BaseImagemClasse> getBaseImagemClasses() {
	return this.baseImagemClasses;
    }

    public void setBaseImagemClasses(Set<BaseImagemClasse> baseImagemClasses) {
	this.baseImagemClasses = baseImagemClasses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<AlocacaoVideoDeteccao> getAlocacaoVideoDeteccaos() {
	return this.alocacaoVideoDeteccaos;
    }

    public void setAlocacaoVideoDeteccaos(Set<AlocacaoVideoDeteccao> alocacaoVideoDeteccaos) {
	this.alocacaoVideoDeteccaos = alocacaoVideoDeteccaos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<DeteccaoVideo> getDeteccaoVideos() {
	return this.deteccaoVideos;
    }

    public void setDeteccaoVideos(Set<DeteccaoVideo> deteccaoVideos) {
	this.deteccaoVideos = deteccaoVideos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioBySupervisor")
    public Set<LiberacaoBaseVideoDeteccao> getLiberacaoBaseVideoDeteccaosForSupervisor() {
	return this.liberacaoBaseVideoDeteccaosForSupervisor;
    }

    public void setLiberacaoBaseVideoDeteccaosForSupervisor(
	    Set<LiberacaoBaseVideoDeteccao> liberacaoBaseVideoDeteccaosForSupervisor) {
	this.liberacaoBaseVideoDeteccaosForSupervisor = liberacaoBaseVideoDeteccaosForSupervisor;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<VideoDeteccao> getVideoDeteccaos() {
	return this.videoDeteccaos;
    }

    public void setVideoDeteccaos(Set<VideoDeteccao> videoDeteccaos) {
	this.videoDeteccaos = videoDeteccaos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<BaseVideoDeteccao> getBaseVideoDeteccaos() {
	return this.baseVideoDeteccaos;
    }

    public void setBaseVideoDeteccaos(Set<BaseVideoDeteccao> baseVideoDeteccaos) {
	this.baseVideoDeteccaos = baseVideoDeteccaos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByEscravo")
    public Set<LiberacaoBaseVideoDeteccao> getLiberacaoBaseVideoDeteccaosForEscravo() {
	return this.liberacaoBaseVideoDeteccaosForEscravo;
    }

    public void setLiberacaoBaseVideoDeteccaosForEscravo(
	    Set<LiberacaoBaseVideoDeteccao> liberacaoBaseVideoDeteccaosForEscravo) {
	this.liberacaoBaseVideoDeteccaosForEscravo = liberacaoBaseVideoDeteccaosForEscravo;
    }

    @Override
    public int hashCode() {
	int hash = 5;
	hash = 47 * hash + Objects.hashCode(this.perfil);
	hash = 47 * hash + Objects.hashCode(this.senha);
	hash = 47 * hash + Objects.hashCode(this.email);
	return hash;
    }

    @Override
    public boolean equals(Object obj) {
	if (this == obj) {
	    return true;
	}
	if (obj == null) {
	    return false;
	}
	if (getClass() != obj.getClass()) {
	    return false;
	}
	final Usuario other = (Usuario) obj;
	if (!Objects.equals(this.senha, other.senha)) {
	    return false;
	}
	if (!Objects.equals(this.email, other.email)) {
	    return false;
	}
	return Objects.equals(this.perfil, other.perfil);
    }

    @Override
    public String toString() {
	return nome + " [" + email + ']';
    }

}
