package br.edu.ufrpe.uag.projetao.model;
// Generated 27/05/2016 19:57:54 by Hibernate Tools 4.3.1

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import br.edu.ufrpe.uag.projetao.interfaces.InterfaceEntity;

/**
 * ImagemDeteccao generated by hbm2java
 */
@Entity
@Table(name = "imagem_deteccao", schema = "public")
public class ImagemDeteccao implements InterfaceEntity {

    private int id;
    private Usuario usuario;
    private byte[] objeto;
    private Set<AlocacaoImagemDeteccao> alocacaoImagemDeteccaos = new HashSet<AlocacaoImagemDeteccao>(0);

    public ImagemDeteccao() {
    }

    public ImagemDeteccao(int id, Usuario usuario, byte[] objeto) {
	this.id = id;
	this.usuario = usuario;
	this.objeto = objeto;
    }

    public ImagemDeteccao(int id, Usuario usuario, byte[] objeto, Set<AlocacaoImagemDeteccao> alocacaoImagemDeteccaos) {
	this.id = id;
	this.usuario = usuario;
	this.objeto = objeto;
	this.alocacaoImagemDeteccaos = alocacaoImagemDeteccaos;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
	return this.id;
    }

    public void setId(int id) {
	this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "supervisor", nullable = false)
    public Usuario getUsuario() {
	return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
	this.usuario = usuario;
    }

    @Column(name = "objeto", nullable = false)
    public byte[] getObjeto() {
	return this.objeto;
    }

    public void setObjeto(byte[] objeto) {
	this.objeto = objeto;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "imagemDeteccao")
    public Set<AlocacaoImagemDeteccao> getAlocacaoImagemDeteccaos() {
	return this.alocacaoImagemDeteccaos;
    }

    public void setAlocacaoImagemDeteccaos(Set<AlocacaoImagemDeteccao> alocacaoImagemDeteccaos) {
	this.alocacaoImagemDeteccaos = alocacaoImagemDeteccaos;
    }

    /*
     * (non-Javadoc)
     * 
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
	final int prime = 31;
	int result = 1;
	result = prime * result + id;
	result = prime * result + Arrays.hashCode(objeto);
	result = prime * result + ((usuario == null) ? 0 : usuario.hashCode());
	return result;
    }

    /*
     * (non-Javadoc)
     * 
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
	if (this == obj) {
	    return true;
	}
	if (obj == null) {
	    return false;
	}
	if (!(obj instanceof ImagemDeteccao)) {
	    return false;
	}
	ImagemDeteccao other = (ImagemDeteccao) obj;
	if (id != other.id) {
	    return false;
	}
	if (!Arrays.equals(objeto, other.objeto)) {
	    return false;
	}
	if (usuario == null) {
	    if (other.usuario != null) {
		return false;
	    }
	} else if (!usuario.equals(other.usuario)) {
	    return false;
	}
	return true;
    }

    /*
     * (non-Javadoc)
     * 
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
	return "ImagemDeteccao [ID: " + id + ", Usu√°rio:" + usuario + "]";
    }

}
